1. Установка с использованием Docker

	Убедитесь, что Docker установлен на вашем сервере. Для этого выполните команду:
	docker --version

	
	Клонирование репозитория проекта: 
	Склонируйте репозиторий с исходным кодом проекта:
	git clone https://github.com/Lenda8859/Project.git
	cd skyy


	Запуск с Docker Compose: В корневой директории проекта должен находиться файл docker-compose.yml. 
	Запустите команду: docker-compose up -d

	Эта команда создаст и запустит необходимые контейнеры: для приложения, базы данных, и других необходимых сервисов (например, Redis для фоновых задач).

	Проверка работы: Чтобы убедиться, что проект развернут корректно, откройте браузер и перейдите по адресу:http://127.0.0.1:8000/

для проверки можно войти под именами пользовотелей 
skyadmin password: kia8585
user1 password: kia8282kia
user2 password: kia8080kia

для проверки траектории полетов 
ICAO24  880455 дата/время 10.09.2024  8:31  16:31
ICAO24  4b180c дата/время 12.09.2024  7:45  17:45


******************************************************************************************************************************************
	Установка вручную (без Docker)
	Установка зависимостей: Убедитесь, что на сервере установлены Python и нужные зависимости. 
	Для этого выполните следующие команды: 
	python3 -m venv venv
	source venv/bin/activate
	pip install -r requirements.txt


	Настройка конфигурации: Создайте файл .env в корне проекта и настройте переменные окружения (например, параметры базы данных, API-ключи и т.д.).

	Миграция базы данных: Выполните миграции для настройки структуры базы данных:python manage.py migrate


	Запуск сервера: Запустите сервер командой:python manage.py runserver


2. Настройка базы данных и фоновых задач

	Конфигурация базы данных: Используется PostgreSQL, убедитесь, что она установлена. Создайте базу данных и пользователя:

	sudo -u postgres psql
	CREATE DATABASE <имя_базы>;
	CREATE USER <имя_пользователя> WITH PASSWORD '<пароль>';
	ALTER ROLE <имя_пользователя> SET client_encoding TO 'utf8';
	ALTER ROLE <имя_пользователя> SET default_transaction_isolation TO 'read committed';
	ALTER ROLE <имя_пользователя> SET timezone TO 'UTC';
	GRANT ALL PRIVILEGES ON DATABASE <имя_базы> TO <имя_пользователя>;


	Настройка подключения: В файле .env укажите параметры подключения к базе данных:
DATABASE_URL=postgres://<имя_пользователя>:<пароль>@localhost/<имя_базы>

Применение миграций: Запустите миграции для создания таблиц:python manage.py migrate


Настройка фоновых задач

Установка Redis: Redis используется для обработки фоновых задач. Установите Redis на сервере:sudo apt-get install redis-server

Настройка Celery: Celery — это инструмент для управления очередями фоновых задач. Настройте его в проекте:
 * В файле celery.py укажите настройки подключения к Redis.
 * Запустите Celery с помощью команды:celery -A <имя_проекта> worker --loglevel=info






